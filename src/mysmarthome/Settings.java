/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mysmarthome;

import java.awt.Dimension;
import java.awt.Rectangle;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPopupMenu.Separator;

/**
 *
 * @author ktams
 */
public class Settings extends javax.swing.JFrame {

    Config myParent = null;
    String[] NewSettingsArr;
    /**
     * Creates new form Settings
     */
    public Settings() {
        initComponents();
    }

    Settings(Config aThis) {
        myParent = aThis;
        initComponents();
        ImageIcon II = new ImageIcon(getClass().getResource("pictures/Home.jpg"));
        this.setIconImage(II.getImage());
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeadLabel = new javax.swing.JLabel();
        jOK = new javax.swing.JButton();
        jCancel = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jHeadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jHeadLabel.setText("Settings");

        jOK.setText("OK");
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });

        jCancel.setText("Cancel");
        jCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jHeadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jOK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jHeadLabel)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 383, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOK)
                    .addComponent(jCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jCancelActionPerformed

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed
        this.dispose();
    }//GEN-LAST:event_jOKActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        JLabel l = null;
        Dimension preferredSize;

/*
{
		"log-level": 6,
		"pid-file": "/var/run/pilight.pid",
		"log-file": "/var/log/pilight.log",
		"webserver-enable": 1,
		"webserver-http-port": 5001,
		"webserver-root": "/usr/local/share/pilight/",
		"webserver-cache": 1
	},
	"hardware": {
		"433gpio": {
			"sender": 0,
			"receiver": 1
		}
	},
	"registry": {
		"pilight": {
			"version": {
				"current": "7.0"
			}
		}
	}
}        
        */
        NewSettingsArr = myParent.strSettings.split("},");
        String[] strArr = NewSettingsArr[0].split("\n");
        Rectangle r = jSeparator1.getBounds();
        int i,j;
        for( i = 0; i < strArr.length-1; i++)
        {
            strArr[i] = strArr[i].replace("\t", "    ");
            l = new JLabel(strArr[i]);
            preferredSize = l.getPreferredSize();
            l.setBounds(r.x, r.y + (2*i)*r.height, preferredSize.width, preferredSize.height);
            this.add(l);
        }
        l = new JLabel("},");
        preferredSize = l.getPreferredSize();
        l.setBounds(r.x, r.y + (2*i++)*r.height, preferredSize.width, preferredSize.height);
        this.add(l);
        Separator sep = new Separator();
        Rectangle bounds = jSeparator1.getBounds();
        sep.setBounds(bounds.x, r.y + (2*i++)*r.height, bounds.width, bounds.height);
        this.add(sep);
        l = new JLabel("Hardware");
        preferredSize = l.getPreferredSize();
        l.setBounds(r.x, r.y + (2*i++)*r.height, jHeadLabel.getBounds().width, preferredSize.height);
        l.setHorizontalAlignment(jHeadLabel.getHorizontalAlignment());
        this.add(l);
        strArr = NewSettingsArr[1].split("\n");
        for( j = 1; j < strArr.length-1; j++)
        {
            strArr[j] = strArr[j].replace("\t", "    ");
            l = new JLabel(strArr[j]);
            preferredSize = l.getPreferredSize();
            l.setBounds(r.x, r.y + (2*i++)*r.height, preferredSize.width, preferredSize.height);
            this.add(l);
        }
        l = new JLabel("},");
        preferredSize = l.getPreferredSize();
        l.setBounds(r.x, r.y + (2*i++)*r.height, preferredSize.width, preferredSize.height);
        this.add(l);
        sep = new Separator();
        bounds = jSeparator1.getBounds();
        sep.setBounds(bounds.x, r.y + (2*i++)*r.height, bounds.width, bounds.height);
        this.add(sep);
        l = new JLabel("Registry");
        preferredSize = l.getPreferredSize();
        l.setBounds(r.x, r.y + (2*i++)*r.height, jHeadLabel.getBounds().width, preferredSize.height);
        l.setHorizontalAlignment(jHeadLabel.getHorizontalAlignment());
        this.add(l);
        strArr = NewSettingsArr[2].split("\n");
        for( j = 1; j < strArr.length-1; j++)
        {
            strArr[j] = strArr[j].replace("\t", "    ");
            l = new JLabel(strArr[j]);
            preferredSize = l.getPreferredSize();
            l.setBounds(r.x, r.y + (2*i++)*r.height, preferredSize.width, preferredSize.height);
            this.add(l);
        }
        l = new JLabel("},");
        preferredSize = l.getPreferredSize();
        l.setBounds(r.x, r.y + (2*i++)*r.height, preferredSize.width, preferredSize.height);
        this.add(l);

        
        i += 3;
        preferredSize = this.getPreferredSize();
        this.setBounds(myParent.getBounds().x, myParent.getBounds().y, this.getBounds().width, r.y + (2*i)*r.height);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCancel;
    private javax.swing.JLabel jHeadLabel;
    private javax.swing.JButton jOK;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
