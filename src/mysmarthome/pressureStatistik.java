/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mysmarthome;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.ImageIcon;

/**
 *
 * @author ktams
 */
public class pressureStatistik extends javax.swing.JFrame {

    public int[] iVal = null;
    String strToday;
    String str100days;
    boolean bShowPressure = false;
    int MouseX, MouseY;
    /**
     * Creates new form pressureStatistik
     */
    public pressureStatistik() {
        ImageIcon II = new ImageIcon(getClass().getResource("pictures/Home.jpg"));
        this.setIconImage(II.getImage());
        initComponents();
        strToday =java.util.ResourceBundle.getBundle("mysmarthome/Bundle").getString("today");
        str100days =java.util.ResourceBundle.getBundle("mysmarthome/Bundle").getString("100days");
        this.setResizable(false);
        this.setBounds(50, 50, this.getBounds().width, this.getBounds().height);
    }

    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        g.drawLine(60, 50, 60, 330);
        g.drawLine(60, 330, 860, 330);
        for( int i = 1; i < 100; i++)
        {
            if((i%20) == 0)
            {
                g.setColor(Color.LIGHT_GRAY);
                g.drawLine(60 + 8*i, 325, 60 + 8*i, 50);
                g.setColor(Color.black);
                g.drawString(""+i, 52 + 8*i, 350);
            }
            g.drawLine(60 + 8*i, 325, 60 + 8*i, 335);
        }
        g.drawString(strToday, 830, 350);
        g.drawString(str100days, 20, 350);
        for( int i = 0; i < 70; i += 5)
        {
            if((i%10) == 0)
            {
                g.setColor(Color.LIGHT_GRAY);
                g.drawLine(55, 50 + i*4, 850, 50 + i*4);
                g.setColor(Color.black);
            }
            g.drawLine(55, 50 + i*4, 65, 50 + i*4);
        }
        g.setColor(Color.LIGHT_GRAY);
        g.drawLine(60, 250, 860, 250);
        g.setColor(Color.black);
        g.drawString("970hP", 10, 295);
        g.drawString("990hP", 10, 255);
        g.drawString("1010hP", 5, 215);
        g.drawString("1030hP", 5, 175);
        g.drawString("1050hP", 5, 135);
        g.drawString("1070hP", 5, 95);
        
        if(iVal != null)
        {
            int xMax = 900, yMax = 900;
            int xMin = 1100, yMin = 1100;
            
            for(int i = 0; i < iVal.length-1; i++)
            {
                int x1 = iVal[iVal.length - 1 - i];
                if(x1 == 0)
                    x1 = 950;
                if(x1 < xMin)
                {
                    xMin = x1;
                    yMin = i;
                }
                if(x1 > xMax)
                {
                    xMax = x1;
                    yMax = i;
                }
                int x2 = iVal[iVal.length - 2 - i];
                
                g.drawLine(860 - i*8, 330 - (x1 - 950)*2, 860 - (i+1)*8, 330 - (x2 - 950)*2);
            }
            g.setColor(Color.red);
            g.drawLine(860 - yMin*8, 330 - (xMin - 950)*2, 860 - yMin*8, 320 - (xMin - 950)*2);
            g.drawString(""+xMin, 850 - yMin*8, 318 - (xMin - 950)*2);
            g.setColor(Color.green);
            g.drawLine(860 - yMax*8, 330 - (xMax - 950)*2, 860 - yMax*8, 320 - (xMax - 950)*2);
            g.drawString(""+xMax, 850 - yMax*8, 318 - (xMax - 950)*2);
            g.setColor(Color.black);
            if(bShowPressure)
            {
                int x = (MouseX - 60)/8;
                if(x >= 0 && x < 100)
                    g.drawString(""+iVal[x], MouseX, MouseY);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setTitle(java.util.ResourceBundle.getBundle("mysmarthome/Bundle").getString("pressStat"));
    }//GEN-LAST:event_formWindowOpened

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        bShowPressure = !bShowPressure;
        if(bShowPressure)
        {
            MouseX = evt.getX();
            MouseY = evt.getY();
            this.repaint();
        }
    }//GEN-LAST:event_formMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        if(bShowPressure)
        {
            MouseX = evt.getX();
            MouseY = evt.getY();
            this.repaint();
        }
    }//GEN-LAST:event_formMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pressureStatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pressureStatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pressureStatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pressureStatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pressureStatistik().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
